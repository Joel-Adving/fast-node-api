{"version":3,"sources":["../../../src/utils/networking.ts"],"sourcesContent":["import { HttpRequest, HttpResponse } from 'uWebSockets.js'\n\nexport function getIpAddress(req: HttpRequest, res: HttpResponse) {\n  const xForwardedFor = req.getHeader('x-forwarded-for')\n  if (xForwardedFor) {\n    return xForwardedFor.split(',')[0].trim()\n  }\n\n  const remoteAddress = req.getHeader('remote-addr')\n  if (remoteAddress) {\n    return remoteAddress\n  }\n\n  const remoteAddr = new Uint8Array(res.getRemoteAddressAsText()) as unknown as number[]\n  const ipAddress = String.fromCharCode.apply(null, remoteAddr)\n\n  if (ipAddress === '::1' || ipAddress === '0000:0000:0000:0000:0000:0000:0000:0001') {\n    return '127.0.0.1'\n  }\n\n  // If it is an IPv4 mapped address, convert to IPv4 format\n  if (ipAddress.includes('::ffff:')) {\n    return ipAddress.split('::ffff:')[1]\n  }\n\n  return ipAddress\n}\n"],"names":["getIpAddress","req","res","xForwardedFor","getHeader","split","trim","remoteAddress","remoteAddr","Uint8Array","getRemoteAddressAsText","ipAddress","String","fromCharCode","apply","includes"],"mappings":"AAEA,OAAO,SAASA,aAAaC,GAAgB,CAAEC,GAAiB,EAC9D,MAAMC,cAAgBF,IAAIG,SAAS,CAAC,mBACpC,GAAID,cAAe,CACjB,OAAOA,cAAcE,KAAK,CAAC,IAAI,CAAC,EAAE,CAACC,IAAI,EACzC,CAEA,MAAMC,cAAgBN,IAAIG,SAAS,CAAC,eACpC,GAAIG,cAAe,CACjB,OAAOA,aACT,CAEA,MAAMC,WAAa,IAAIC,WAAWP,IAAIQ,sBAAsB,IAC5D,MAAMC,UAAYC,OAAOC,YAAY,CAACC,KAAK,CAAC,KAAMN,YAElD,GAAIG,YAAc,OAASA,YAAc,0CAA2C,CAClF,MAAO,WACT,CAGA,GAAIA,UAAUI,QAAQ,CAAC,WAAY,CACjC,OAAOJ,UAAUN,KAAK,CAAC,UAAU,CAAC,EAAE,AACtC,CAEA,OAAOM,SACT"}