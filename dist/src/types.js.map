{"version":3,"sources":["../../src/types.ts"],"sourcesContent":["import { HttpRequest, HttpResponse, TemplatedApp } from 'uWebSockets.js'\n\nexport type Middleware = (req: Request, res: Response, next: () => void) => void\nexport type HttpMethod = 'get' | 'post' | 'patch' | 'put' | 'del' | 'options'\n\nexport interface ILogger {\n  log: (message: unknown) => void\n  error: (message: unknown) => void\n  warn: (message: unknown) => void\n  info: (message: unknown) => void\n}\n\nexport interface Request extends HttpRequest {\n  body: <T>() => Promise<T>\n  getCookie: (name: string) => string\n}\n\nexport interface Response extends HttpResponse {\n  done: boolean\n  abortEvents: (() => void)[]\n  send: (body: string) => void\n  json: (body: unknown) => void\n  status: (code: number) => Response\n  header: (key: string, value: string) => Response\n  sendFile: (filePath: string) => void\n}\n\nexport interface IApp extends TemplatedApp {\n  get: (path: string, handler: (res: Response, req: Request) => void) => TemplatedApp\n  post: (path: string, handler: (res: Response, req: Request) => void) => TemplatedApp\n  patch: (path: string, handler: (res: Response, req: Request) => void) => TemplatedApp\n  put: (path: string, handler: (res: Response, req: Request) => void) => TemplatedApp\n  delete: (path: string, handler: (res: Response, req: Request) => void) => TemplatedApp\n  options: (path: string, handler: (res: Response, req: Request) => void) => TemplatedApp\n}\n"],"names":[],"mappings":"AA2BA,QAOC"}